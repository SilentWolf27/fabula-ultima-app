-- Create enum for user roles
CREATE TYPE user_role AS ENUM ('player', 'master');

-- Create profile_data table
CREATE TABLE IF NOT EXISTS public.profile_data (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID UNIQUE NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    role user_role NOT NULL DEFAULT 'player',
    display_name TEXT,
    avatar_url TEXT,
    language TEXT DEFAULT 'es'
);

-- Enable RLS
ALTER TABLE public.profile_data ENABLE ROW LEVEL SECURITY;

-- Create policies
CREATE POLICY "Users can view their own profile" 
    ON public.profile_data
    FOR SELECT 
    USING (auth.uid() = user_id);

CREATE POLICY "Users can update their own profile" 
    ON public.profile_data
    FOR UPDATE 
    USING (auth.uid() = user_id);

-- Create INDEX for user_id
CREATE INDEX profile_data_user_id ON public.profile_data(user_id);

-- Grant permissions
GRANT ALL ON public.profile_data TO authenticated;
GRANT ALL ON public.profile_data TO service_role;
